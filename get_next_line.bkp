/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.bkp                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: fiaparec <fiaparec@student.42sp.org.br>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/09/25 10:04:43 by fiaparec          #+#    #+#             */
/*   Updated: 2022/02/13 06:53:12 by fiaparec         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdio.h>
#include "get_next_line.h"

char	*read_line(int fd, char *chunck)
{
	int			new_line;
	int			bytes_read;
	int 		i;
	static char	*line;
	char		*line_r;
	char		*line_aux;

	new_line = 0;
	bytes_read = 1;
	if (!line)
	{
		line = (char *)malloc(sizeof(char) * (BUFFER_SIZE + 1));
		if (!line)
			return (NULL);
		*line = '\0';
	}

	while (new_line == 0 && bytes_read > 0)
	{
		bytes_read = read(fd, chunck, BUFFER_SIZE); // chunck == '5678'
		*(chunck + bytes_read) = '\0'; // chunck == '1234\0'

		line_aux = (char *)malloc(sizeof(char) * (ft_strlen(line) + 1));
		if (!line_aux)
			return (NULL);
		line_aux = '\0';
		printf("%lu\n\n\n", ft_strlen(line_aux));
		ft_strlcpy(line_aux, line, ft_strlen(line));
		free(line);
		printf("%lu\n\n\n", ft_strlen(line_aux));
		line = (char *)malloc(sizeof(char) * (ft_strlen(line_aux) + 1));
		line = ft_strjoin(line_aux, chunck); // line == '1234'+'5678'+'90\na'
		
		i = 0;
		while (*(line + i))
		{
			if (*(line + i) == '\n')
			{
				new_line = 1;
				line_r = (char *)malloc(sizeof(char) * (i + 2));
				if (!line_r)
					return (NULL);
				ft_strlcpy(line_r, line, (i + 2));

				line_aux = (char *)malloc(sizeof(char) * (ft_strlen(line) - i));
				if (!line_aux)
					return (NULL);
				ft_strlcpy(line_aux, (line + i + 1), (ft_strlen(line) - i));

				free(line);
				line = (char *)malloc(sizeof(char) * (BUFFER_SIZE + 1));
				if (!line)
					return (NULL);
				line = ft_strdup(line_aux);

				return (line_r);
			}
			i++;
		}
	}
	return (NULL);
}

char	*get_next_line(int fd)
{
	static char	*chunck;

	if (fd < 0 || fd > 256 || BUFFER_SIZE <= 0)
		return (NULL);

	if (!chunck)
	{
		chunck = (char *)malloc(sizeof(char) * (BUFFER_SIZE + 1));
		if (!chunck)
			return (NULL);
		*chunck = '\0';
	}

	return (read_line(fd, chunck));
}
